/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2022-02-10 02:07:51 UTC)
 * on 2022-02-10 at 02:08:18 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.businessmessages.v1;

/**
 * Service definition for Businessmessages (v1).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/business-communications/business-messages/home/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BusinessmessagesRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Businessmessages extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.25.0-SNAPSHOT of the Business Messages API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://businessmessages.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Businessmessages(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Businessmessages(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Conversations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Businessmessages businessmessages = new Businessmessages(...);}
   *   {@code Businessmessages.Conversations.List request = businessmessages.conversations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Conversations conversations() {
    return new Conversations();
  }

  /**
   * The "conversations" collection of methods.
   */
  public class Conversations {

    /**
     * An accessor for creating requests from the Events collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Businessmessages businessmessages = new Businessmessages(...);}
     *   {@code Businessmessages.Events.List request = businessmessages.events().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Events events() {
      return new Events();
    }

    /**
     * The "events" collection of methods.
     */
    public class Events {

      /**
       * Creates an event in a conversation.
       *
       * Create a request for the method "events.create".
       *
       * This request holds the parameters needed by the businessmessages server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The conversation that contains the message. Resolves to "conversations/{conversationId}".
       * @param content the {@link com.google.api.services.businessmessages.v1.model.BusinessMessagesEvent}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.businessmessages.v1.model.BusinessMessagesEvent content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends BusinessmessagesRequest<com.google.api.services.businessmessages.v1.model.BusinessMessagesEvent> {

        private static final String REST_PATH = "v1/{+parent}/events";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^conversations/[^/]+$");

        /**
         * Creates an event in a conversation.
         *
         * Create a request for the method "events.create".
         *
         * This request holds the parameters needed by the the businessmessages server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The conversation that contains the message. Resolves to "conversations/{conversationId}".
         * @param content the {@link com.google.api.services.businessmessages.v1.model.BusinessMessagesEvent}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.businessmessages.v1.model.BusinessMessagesEvent content) {
          super(Businessmessages.this, "POST", REST_PATH, content, com.google.api.services.businessmessages.v1.model.BusinessMessagesEvent.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^conversations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The conversation that contains the message. Resolves to
         * "conversations/{conversationId}".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The conversation that contains the message. Resolves to "conversations/{conversationId}".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The conversation that contains the message. Resolves to
         * "conversations/{conversationId}".
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^conversations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The unique identifier of the event, assigned by the agent. If an event has the same
         * `eventId` as a previous event in the conversation, Business Messages returns an
         * `ALREADY_EXISTS` error.
         */
        @com.google.api.client.util.Key
        private java.lang.String eventId;

        /** The unique identifier of the event, assigned by the agent. If an event has the same `eventId` as a
       previous event in the conversation, Business Messages returns an `ALREADY_EXISTS` error.
         */
        public java.lang.String getEventId() {
          return eventId;
        }

        /**
         * The unique identifier of the event, assigned by the agent. If an event has the same
         * `eventId` as a previous event in the conversation, Business Messages returns an
         * `ALREADY_EXISTS` error.
         */
        public Create setEventId(java.lang.String eventId) {
          this.eventId = eventId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Messages collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Businessmessages businessmessages = new Businessmessages(...);}
     *   {@code Businessmessages.Messages.List request = businessmessages.messages().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Messages messages() {
      return new Messages();
    }

    /**
     * The "messages" collection of methods.
     */
    public class Messages {

      /**
       * Sends a message from an agent to a user. If a conversation doesn't exist or an agent tries to
       * send a message in a conversation that it isn't authorized to participate in, returns a
       * `PERMISSION DENIED` error.
       *
       * Create a request for the method "messages.create".
       *
       * This request holds the parameters needed by the businessmessages server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The conversation that contains the message. Resolves to "conversations/{conversationId}".
       * @param content the {@link com.google.api.services.businessmessages.v1.model.BusinessMessagesMessage}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.businessmessages.v1.model.BusinessMessagesMessage content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends BusinessmessagesRequest<com.google.api.services.businessmessages.v1.model.BusinessMessagesMessage> {

        private static final String REST_PATH = "v1/{+parent}/messages";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^conversations/[^/]+$");

        /**
         * Sends a message from an agent to a user. If a conversation doesn't exist or an agent tries to
         * send a message in a conversation that it isn't authorized to participate in, returns a
         * `PERMISSION DENIED` error.
         *
         * Create a request for the method "messages.create".
         *
         * This request holds the parameters needed by the the businessmessages server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The conversation that contains the message. Resolves to "conversations/{conversationId}".
         * @param content the {@link com.google.api.services.businessmessages.v1.model.BusinessMessagesMessage}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.businessmessages.v1.model.BusinessMessagesMessage content) {
          super(Businessmessages.this, "POST", REST_PATH, content, com.google.api.services.businessmessages.v1.model.BusinessMessagesMessage.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^conversations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The conversation that contains the message. Resolves to
         * "conversations/{conversationId}".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The conversation that contains the message. Resolves to "conversations/{conversationId}".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The conversation that contains the message. Resolves to
         * "conversations/{conversationId}".
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^conversations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. A flag to send the specified fallback text instead of other message content.
         * Only available to agents that aren't launched. If the flag is true and fallback text
         * isn't specified, Business Messages returns an error.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean forceFallback;

        /** Optional. A flag to send the specified fallback text instead of other message content. Only
       available to agents that aren't launched. If the flag is true and fallback text isn't specified,
       Business Messages returns an error.
         */
        public java.lang.Boolean getForceFallback() {
          return forceFallback;
        }

        /**
         * Optional. A flag to send the specified fallback text instead of other message content.
         * Only available to agents that aren't launched. If the flag is true and fallback text
         * isn't specified, Business Messages returns an error.
         */
        public Create setForceFallback(java.lang.Boolean forceFallback) {
          this.forceFallback = forceFallback;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Sends a receipt for a message from an agent to a user.
       *
       * Create a request for the method "messages.updateReceipt".
       *
       * This request holds the parameters needed by the businessmessages server.  After setting any
       * optional parameters, call the {@link UpdateReceipt#execute()} method to invoke the remote
       * operation.
       *
       * @param name The name of the receipt, as set by Business Messages. Resolves to
       *        "conversations/{conversationId}/messages/{messageId}/receipt", where {conversationId} is
       *        the unique ID for the conversation and {messageId} is the unique ID for the message.
       * @param content the {@link com.google.api.services.businessmessages.v1.model.BusinessMessagesReceipt}
       * @return the request
       */
      public UpdateReceipt updateReceipt(java.lang.String name, com.google.api.services.businessmessages.v1.model.BusinessMessagesReceipt content) throws java.io.IOException {
        UpdateReceipt result = new UpdateReceipt(name, content);
        initialize(result);
        return result;
      }

      public class UpdateReceipt extends BusinessmessagesRequest<com.google.api.services.businessmessages.v1.model.BusinessMessagesReceipt> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^conversations/[^/]+/messages/[^/]+/receipt$");

        /**
         * Sends a receipt for a message from an agent to a user.
         *
         * Create a request for the method "messages.updateReceipt".
         *
         * This request holds the parameters needed by the the businessmessages server.  After setting any
         * optional parameters, call the {@link UpdateReceipt#execute()} method to invoke the remote
         * operation. <p> {@link UpdateReceipt#initialize(com.google.api.client.googleapis.services.Abstra
         * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param name The name of the receipt, as set by Business Messages. Resolves to
       *        "conversations/{conversationId}/messages/{messageId}/receipt", where {conversationId} is
       *        the unique ID for the conversation and {messageId} is the unique ID for the message.
         * @param content the {@link com.google.api.services.businessmessages.v1.model.BusinessMessagesReceipt}
         * @since 1.13
         */
        protected UpdateReceipt(java.lang.String name, com.google.api.services.businessmessages.v1.model.BusinessMessagesReceipt content) {
          super(Businessmessages.this, "PATCH", REST_PATH, content, com.google.api.services.businessmessages.v1.model.BusinessMessagesReceipt.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^conversations/[^/]+/messages/[^/]+/receipt$");
          }
        }

        @Override
        public UpdateReceipt set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateReceipt) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateReceipt setAccessToken(java.lang.String accessToken) {
          return (UpdateReceipt) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateReceipt setAlt(java.lang.String alt) {
          return (UpdateReceipt) super.setAlt(alt);
        }

        @Override
        public UpdateReceipt setCallback(java.lang.String callback) {
          return (UpdateReceipt) super.setCallback(callback);
        }

        @Override
        public UpdateReceipt setFields(java.lang.String fields) {
          return (UpdateReceipt) super.setFields(fields);
        }

        @Override
        public UpdateReceipt setKey(java.lang.String key) {
          return (UpdateReceipt) super.setKey(key);
        }

        @Override
        public UpdateReceipt setOauthToken(java.lang.String oauthToken) {
          return (UpdateReceipt) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateReceipt setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateReceipt) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateReceipt setQuotaUser(java.lang.String quotaUser) {
          return (UpdateReceipt) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateReceipt setUploadType(java.lang.String uploadType) {
          return (UpdateReceipt) super.setUploadType(uploadType);
        }

        @Override
        public UpdateReceipt setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateReceipt) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the receipt, as set by Business Messages. Resolves to
         * "conversations/{conversationId}/messages/{messageId}/receipt", where {conversationId} is
         * the unique ID for the conversation and {messageId} is the unique ID for the message.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the receipt, as set by Business Messages. Resolves to
       "conversations/{conversationId}/messages/{messageId}/receipt", where {conversationId} is the unique
       ID for the conversation and {messageId} is the unique ID for the message.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the receipt, as set by Business Messages. Resolves to
         * "conversations/{conversationId}/messages/{messageId}/receipt", where {conversationId} is
         * the unique ID for the conversation and {messageId} is the unique ID for the message.
         */
        public UpdateReceipt setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^conversations/[^/]+/messages/[^/]+/receipt$");
          }
          this.name = name;
          return this;
        }

        @Override
        public UpdateReceipt set(String parameterName, Object value) {
          return (UpdateReceipt) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Surveys collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Businessmessages businessmessages = new Businessmessages(...);}
     *   {@code Businessmessages.Surveys.List request = businessmessages.surveys().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Surveys surveys() {
      return new Surveys();
    }

    /**
     * The "surveys" collection of methods.
     */
    public class Surveys {

      /**
       * Creates a customer satisfaction survey in a conversation. If an agent sends multiple surveys in
       * the same conversation within 24 hours, surveys after the first return a `RESOURCE_EXHAUSTED`
       * error. If the client doesn't support the survey feature, survey returns a `FAILED_PRECONDITION`
       * error.
       *
       * Create a request for the method "surveys.create".
       *
       * This request holds the parameters needed by the businessmessages server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The conversation that contains the survey. Resolves to "conversations/{conversationId}".
       * @param content the {@link com.google.api.services.businessmessages.v1.model.BusinessMessagesSurvey}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.businessmessages.v1.model.BusinessMessagesSurvey content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends BusinessmessagesRequest<com.google.api.services.businessmessages.v1.model.BusinessMessagesSurvey> {

        private static final String REST_PATH = "v1/{+parent}/surveys";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^conversations/[^/]+$");

        /**
         * Creates a customer satisfaction survey in a conversation. If an agent sends multiple surveys in
         * the same conversation within 24 hours, surveys after the first return a `RESOURCE_EXHAUSTED`
         * error. If the client doesn't support the survey feature, survey returns a `FAILED_PRECONDITION`
         * error.
         *
         * Create a request for the method "surveys.create".
         *
         * This request holds the parameters needed by the the businessmessages server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The conversation that contains the survey. Resolves to "conversations/{conversationId}".
         * @param content the {@link com.google.api.services.businessmessages.v1.model.BusinessMessagesSurvey}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.businessmessages.v1.model.BusinessMessagesSurvey content) {
          super(Businessmessages.this, "POST", REST_PATH, content, com.google.api.services.businessmessages.v1.model.BusinessMessagesSurvey.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^conversations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The conversation that contains the survey. Resolves to
         * "conversations/{conversationId}".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The conversation that contains the survey. Resolves to "conversations/{conversationId}".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The conversation that contains the survey. Resolves to
         * "conversations/{conversationId}".
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^conversations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The unique identifier of the survey, assigned by the agent. If a survey attempts to use
         * the same `surveyId` as a previous survey, Business Messages returns an `ALREADY_EXISTS`
         * error.
         */
        @com.google.api.client.util.Key
        private java.lang.String surveyId;

        /** The unique identifier of the survey, assigned by the agent. If a survey attempts to use the same
       `surveyId` as a previous survey, Business Messages returns an `ALREADY_EXISTS` error.
         */
        public java.lang.String getSurveyId() {
          return surveyId;
        }

        /**
         * The unique identifier of the survey, assigned by the agent. If a survey attempts to use
         * the same `surveyId` as a previous survey, Business Messages returns an `ALREADY_EXISTS`
         * error.
         */
        public Create setSurveyId(java.lang.String surveyId) {
          this.surveyId = surveyId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Businessmessages}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Businessmessages}. */
    @Override
    public Businessmessages build() {
      return new Businessmessages(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BusinessmessagesRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBusinessmessagesRequestInitializer(
        BusinessmessagesRequestInitializer businessmessagesRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(businessmessagesRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
